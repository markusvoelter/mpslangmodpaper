----------------------- REVIEW 3 ---------------------
PAPER: 2
TITLE: Language and IDE Mo dularization, Extension and Comp osition with MPS
AUTHORS: Markus Voelter

General Comments:

The abstract and introduction talk about how the paper will introduce MPS in a “practically usable way.” Yet, the conclusions talk about how challenging the learning curve is for most adopters. These statements seem incongruous.

The conclusion states that MPS “scales to realistic program sizes” but there is no evidence either in the paper or references to support this. Please prove or remove the statement. Almost all of the statements in the conclusion are opinions and not backed by any evidence, so this should be more clearly mentioned as opinion in the paper’s current state and lack of empirical evidence.

The paper lacks the level of citation that would be expected for a scholarly paper of 35 pages (more below). Just 8 non-self references is generally at the level of a workshop paper, not a paper at this length and depth. Paper seems to depend a lot on reference 10, but the citation details only list the author names, title, and year. Overall, links to literature and the citations used are rather weak.

The paper mislabels “evaluation” for “discussion.” An evaluation is typically an empirical assessment based on experimentation. That is not provided in this paper. Please use a different word so as not to confuse those who use that word for a specific meaning in experimental software engineering.

The paper talks a lot about “projectional editing” in the early parts of the paper, but never really defines what is meant until later. For readers new to the area, please provide a more concrete and definitive discussion early in the paper.

I may have missed, but the idea of the base language actually evolving could be an important challenge. Can you say more to that (sorry if I missed this discussion, but it seems important to highlight)? If one DSL is derived from another, the idea of co-evolution seems real.

Page 4 mentions “For editing purposes … using graphical shapes.” This is true for MPS? It is in the paragraph mentioning MPS, but no examples of editing graphical shapes is presented in this paper for MPS. Perhaps some concepts are mixed and need to be clarified in the last paragraph.

The idea of interaction patterns is introduced on page 5, but at that point not really explained what this means. Please elaborate at that point.

Perhaps some intro to section 2.3 would help, before jumping right into the examples.

Page 8 mentions a project started in July 2011. Update in revision.

Page 8 also mentions that mbeddr uses Lego Mindstorms for “real-world relevance” – this seems somewhat odd – how does what many consider to be a toy point to real-world relevance? The paragraph then mentions a line tracing robot – this example is taught to middle school children on a daily basis, so not sure why it is that motivating.

The comment about Intentional Software on page 8 could easily be removed – seems a bit like a jab and perhaps not the place for this, or at least reworded (even if this is true).

Perhaps Figure 2 could also indicate “BaseConcept” on the figure.

In footnote 1 on page 11, it is mentioned that the complete definition was not provided. Please provide a link or reference to where a complete definition may be available, if it exists.

When the first MPS templates are introduce around Figure 5, I felt that the accompanying text could have been much better written. This is an important part of the paper in terms of reader understandability – please try to give more details around page 13-14, and other figures that are early in the introduction of MPS. I also felt more detail was needed in Section 5.4.1, and on page 31. The discussion at the bottom of page 34 could also be expanded with more detail.

In Section 5.3, in examples where no type system applies, please explain why.

The discussion about AspectJ on page 23 is a bit perplexing. The bottom of the page touts the advantages of the approach (in terms of preplanning), but the middle of the page just gives a weak justification for not using it as “”we don’t want to introduce AspectJ here” – why not, if that offers the advantages mentioned at the bottom of the paper? Better justification for not using it seems to be needed.

At the bottom of page 25, please explain what you mean by an “intention.”

The introduction seemed a bit oddly initiated. There is no initial section but jumps right to “1.1” – perhaps some intro text would be helpful.

When acronyms are presented on first use (e.g., IDE in abstract, and other examples), please fully elaborate.



References:

The paper only has 8 non-self references for a 35-page paper. This suggests, as I found in this case, that the author has not set up the paper very well in terms of related work and expressing the content in the context of existing literature. It is understood that this is a tutorial paper, but I still expected the paper to have more of a scientific approach by placing the paper amid the related literature.

At the top of page 2, where various limitations are listed with current approaches (e.g., “limited composability”) please try to point to literature that also identifies this as a problem.

Provide a reference to “JetBrains MPS” on first mention on page 2 and opening of section 2.2.

On page 3, the types of modularization are presented as if they are new to this paper, but have been covered in the literature in many places by others. I am not sure why the author does not recognize these other works. The classic paper by Mernik, Heering and Sloane is missing in an obvious way to anyone working in this area.

Please provide a reference to LSP as mentioned on page 3 (Liskov substitution).

When mentioning modern parsing techniques on page 4, mention a few examples and provide references.

Perhaps some reference to Hibernate, JDO and JPA (also expand acronyms) is needed

Cite references for JSP, Velocity and FreeMarker on page 7

Ref for Misra-C, Osek, and Mindstorms on page 8

On page 9, instead of the URL for Antlr, there are also books and papers about it that could be cited

Refs for Xpand and Jet on page 13

On page 33, component-based design has a URL to a Wikipedia entry. There are many good books and articles that would serve as better references and could be added to the bibliography.

The details of reference 10 are missing! Not sure where this was published…



Spelling and Grammar:

The following are suggestions about the grammar and writing style used in the paper – 
many of these are VERY minor:

-> I have gone through all of them and accepted most. 

For some reason, all of the open quote symbols are printed backwards. Please fix.
Some of the text extends far into the right margin.

-> todo

“meta models” and “meta-model” different spellings; perhaps just “metamodels”

-> todo

Perhaps the URL on this page could be a footnote instead of inline

-> todo


Figure 7: Figure extends well beyond margin; true for most figures in this section

-> todo

Figure 15: “LenghtOf” misspelled in actual figure

-> todo


