\begin{abstract}

Modularization and composition of languages and their IDEs is an important
building block for working efficiently with domain-specific languages.
Traditionally this has been a challenge because many grammar formalisms are not
closed under composition, hence syntactic composition of languages can be
challenging. Composing semantics can also be hard, at least in the general case.
Finally, a lot of existing work does not consider IDEs for the composed
languages. This paper illustrates how JetBrains MPS addresses language and IDE
modularization and composition based on a projectional editor and modular type
systems and transformations. The paper also classifies composition approaches
according to the dependencies between the composed languages and whether
syntactic composition is supported. Each of the approaches is illustrated with
an extensive example implementation in MPS.
% \keywords{DSLs \and language composition \and language Extension \and
% JetBrains MPS \and Language Workbench} \PACS{PACS code1 \and PACS code2 \and
% more} \subclass{MSC code1 \and MSC code2 \and more}
\end{abstract}