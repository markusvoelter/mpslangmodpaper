


\section{Summary}
\label{Summary}

MPS is powerful environment for language engineering. While not all of its
features are unique (see \sect{Related}), the referencing of flexible
composition and the notational freedom as a consequence of the projectional
approach is certainly convincing. I also want to emphasize that the tool also
scales to realistic program sizes, the editor is very usable, and it integrates
well with existing VCS (diff and merge is provided on the level of the concrete
syntax). At the very minimum, the tool is a perfect environment for language
experimentation in the context of academic and industrial research.
 
The major drawback of MPS is its non-trivial learning curve. Because it works so
differently than traditional language engineering environments, and because it
addresses so many aspects of languages (incl. type systems, data flow and
refactorings) mastering the tools takes a significant investment in terms of
time. I hope that in the future this investment will be reduced by better
documentation and better defaults, to keep simple things simple and complex
things tractable. There are initial ideas on how this could be done.